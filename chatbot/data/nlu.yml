version: "2.0"

nlu:
- intent: availability
  examples: |
    - Es relevante que el sistema este disponible las 24 horas del día durante todo el año
    - Es importante que el sistema este disponible las 24 horas los 365 días del año
    - El sistema debe estar disponible el 99% del tiempo durante los primeros seis meses de funcionamiento.
    - El sistema debe estar disponible a la mayor cantidad de accesos. 
    - De 1000 accesos al sistema, el sistema esta disponible 999 veces. 
    - El tiempo de actividad alcanzado por el sistema debe ser del 95%.
    - El tiempo de actividad alcanzado por el sistema debe ser de un porcentaje alto.
    - El sistema debe fallar un porcentaje bajo de veces del tiempo que este disponible.
    - El sistema debe fallar una baja cantidad de veces del tiempo disponible en linea.
    - Los recursos del sistema deben estar disponible en cualquier momento del dia.
    - El sistema debe proporcionar un contacto las 24 horas del dia, los siete dias de la semana.
    - El sistema debe proporcionar un contacto todo el dia, cualquier dia de la semana.
    - El sistema ante alguna falla, debe dar un comunicado comprensible al usuario.
    - El sistema ante alguna falla, debe notificar al usuario claramente.
    - El tiempo de inactividad del sistema debe ser como maximo un periodo chico por año.
    - El sistema debe estar inactivo un tiempo relativamente chico por año.
    - El sistema debe estar disponible dentro de 24hs posteriores a un cambio.
    - El sistema debe estar disponible dentro de 24hs posteriores a una nueva instalacion o cambio de version.
    - El software del sistema debe poder funcionar sin reiniciar el sistema por completo frente a una falla.
    - Debe ser posible que se trate una falla de software del sistema independientemente. 
    - El hardware del sistema debe poder funcionar sin una perdida completa de servicio, excepto que falle la fuente de energia primaria y de respaldo.
    - El hardware del sistema debe poder funcionar sin perder el servicio por completo, excepto cuando fallen todos los suministros de energia.
    - El sistema debe responder sin perdidas a los cambios de procesamiento y entrada y salida.
    - Ante una inactividad el sistema debe volver a operar con un retraso minimo.
    - Ante una caida del sistema este debe recuperarse en el menos tiempo posible. 
    - El entorno de desarollo y mantenimiento debe estar disponible para una gran cantidad de desarrolladores el mayor tiempo posible laboral.

- intent: fault_tolerance
  examples: |
    - Es imporante que el sistema pueda soportar la pérdida de uno o más servidores
    - Nos importa que el programa pueda resisistir una caída de corriente
    - Es muy prioritario que el sistema sea tolerante a fallos
    
- intent: maintainability
  examples: |
    - Los componentes del sistema deben poder intercambiarse sin afectar el funcionamiento del programa.
    - El producto debe ser diseñado usando Patrones de Diseño y buenas prácticas de programación.
    - Debe ser altamente configurable para uso con varios sistemas de bases de datos para los usuarios finales.
    - El producto debe continuar operando mientras se actualiza o se añade un nuevo recurso. Debe continuar operando sin interrupciones. 
    - Actualizaciones de mantenimiento deben ser oferecidas a los clientes una vez al año. Estas no deben tomar más de 5 minutos para ser instaladas.
    - Debe operar en cualquier plataforma. Debe ser adaptable para cualquier tecnología nueva sin hacer cambios en su arquitectura.
    - El sistema debe crer registros de todos los cambios, actualizaciones, o arreglos que se le realizan.
    - El sistema debe ser fácil de actualizar.
    - Las herramientas de software y aplicaciones pre-construidas que no tienen código fuente disponible deben venir con un completo diagnóstico y soporte al cliente.
    - El sistema debe estar diseñado en módulos donde los errores puedan ser detectados y corregidos fácilmente. Esto facilita instalar actualizaciones y nuevas funcionalidades si así se requiere.
   
- intent: performance
  examples: |
    - Es importante que el sistema traiga resultados de búsqueda en un tiempo aceptable
    - Es prioritario que el sistema realize la actualización del sitio rápido
    - El sistema actualizará la pantalla en cortos periodos de tiempo.
    - El producto responderá rápidamente para mantener los datos actualizados en la pantalla.
    - Se producirán resultados de búsqueda en un tiempo aceptable.
    - Los resultados de la búsqueda se devolverán en un tiempo aceptable, luego de que el usuario haya introducido los criterios de búsqueda.
    - Los miembros del personal deberán poder completar una serie de tareas de manera oportuna.
    - El tiempo máximo de espera para que un usuario navegue de una pantalla a otra no será demasiado largo.
    - El sistema permitirá que trabajen al mismo tiempo varios usuarios en simultáneo.
    - Se permitirá que los clientes existentes inicien sesión en el sitio web con su dirección de correo electrónico y contraseña en un corto periodo.
    - La interfaz del producto debe ser rápida.
    - El producto sondeará el sistema en busca de mensajes cada segundo. 

- intent: scalability
  examples: |
    - Es importante que el sistema sea escalable
    - Es prioritario que el sistema pueda adaptarse a un crecimiento de visitas de manera sencilla
   
- intent: security
  examples: |
    - Es importante que el sistema traiga autorización de usuarios y almacenamiento seguro de contraseñas
    - Es prioritario que el sistema proteja la integridad de la información del usuario
    - Garantizar que solo los usuarios autorizados puedan acceder al sistema.
    - El producto podrá distinguir entre usuarios autorizados y no autorizados en todos los intentos de acceso.
    - Todo usuario del sistema deberá estar autenticado y autorizado.
    - Verificación básica de la integridad de los datos para reducir la posibilidad de que se introduzcan datos incorrectos o no válidos.
    - Todas las adiciones de nuevos usuarios y las modificaciones al acceso de los usuarios se registrarán en un Informe.
    - Solo se ingresarán datos válidos en el sistema. 
    - No se introducirán datos inválidos en el sistema.
    - El producto estará libre de virus informáticos.
    - Se evitará ataques maliciosos, incluida la denegación de servicio.
    - Garantizar que los datos de la base de datos se correspondan con los datos introducidos por el usuario.
    
- intent: usability
  examples: |
    - Es importante que el sistema sea intuitivo y de fácil comprensión
    - Es prioritario que el sistema pueda ser usado con facilidad
    - El sistema será intuitivo y autoexplicativo.
    - El producto debe ser fácil de aprender para un agente sin conocimiento.
    - Instalación realizable por un agente no capacitado sin recurrir a instrucciones impresas por separado.
    - Fácil uso, tanto por los administradores del programa, como por miembros del personal.
    - Los usuarios se sentirán satisfechos usando el producto.
    - Las personas sin formación y sin conocimientos de inglés podrán utilizar el producto.
    - Todos los mensajes de error producidos por el sistema deben ser significativos, de modo que los usuarios que probablemente los vean puedan actuar en consecuencia.
    - Se deberá poder mostrar varias entidades (casos, sospechosos) simultáneamente.
    - La navegación debe diseñarse para ayudar a los usuarios a comprender dónde se encuentran, dónde han estado y adónde pueden ir a continuación.
    - Se deberán proporcionar funciones de usuario final y administrador que sean fáciles de usar e intuitivas en todo momento.
